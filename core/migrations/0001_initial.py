# Generated by Django 3.1.5 on 2021-01-27 10:55

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='MainUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='GameSetting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('manufacturer_balance', models.PositiveIntegerField(verbose_name='Баланс производителя')),
                ('broker_balance', models.PositiveIntegerField(verbose_name='Баланс маклера')),
                ('crown_balance', models.PositiveIntegerField(default=12000, verbose_name='Баланс короны')),
                ('transaction_limit', models.PositiveIntegerField(verbose_name='Лимит сделки')),
                ('number_of_brokers', models.PositiveIntegerField(default=3, verbose_name='Количество маклеров в сессии')),
                ('turn_time_preset', models.TextField(default={1: 15, 2: 10, 3: 10, 4: 10, 5: 7, 6: 7, 7: 7, 8: 7, 9: 7, 10: 7})),
            ],
            options={
                'verbose_name': 'Пресет настроек',
                'verbose_name_plural': 'Пресеты настроек',
            },
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nickname', models.CharField(default='', max_length=255, verbose_name='Никнейм')),
                ('city', models.CharField(choices=[('NF', 'Неверфол'), ('TT', 'Тортуга'), ('WS', 'Вемшир'), ('AV', 'Айво'), ('AD', 'Алендор'), ('ET', 'Этруа')], max_length=10, null=True, verbose_name='Город')),
                ('role', models.CharField(blank=True, choices=[('broker', 'Маклер'), ('manufacturer', 'Производитель')], default='', max_length=20, verbose_name='Игровая роль')),
                ('balance', models.IntegerField(default=0)),
                ('is_bankrupt', models.BooleanField(default=False)),
                ('turn_finished', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Игрок',
                'verbose_name_plural': 'Игроки',
            },
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название сессии')),
                ('turn_count', models.PositiveIntegerField(verbose_name='Количество игровых ходов')),
                ('status', models.CharField(choices=[('Created', 'Сессия создана'), ('Filled', 'Сессия заполнена')], default='Created', max_length=100, verbose_name='Статус сессии')),
                ('is_started', models.BooleanField(default=False)),
                ('player_count', models.IntegerField(default=14, verbose_name='количество игроков')),
                ('settings', models.OneToOneField(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='session', to='core.gamesetting')),
            ],
            options={
                'verbose_name': 'Игровая сессия',
                'verbose_name_plural': 'Игровые сессии',
            },
        ),
        migrations.CreateModel(
            name='Warehouse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('billets', models.PositiveIntegerField(default=0)),
                ('player', models.ForeignKey(limit_choices_to={'role': 'manufacturer'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='warehouse', to='core.player')),
            ],
        ),
        migrations.CreateModel(
            name='UserWebSocket',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('channel_name', models.CharField(max_length=255)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Turn',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('turn_num', models.IntegerField(verbose_name='Номер хода')),
                ('turn_time', models.PositiveIntegerField(blank=True, default=30, verbose_name='Время хода')),
                ('turn_finished', models.BooleanField(default=False)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='turn', to='core.session', verbose_name='Сессия')),
            ],
            options={
                'verbose_name': 'Ход',
                'verbose_name_plural': 'Ходы',
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number_of_billets', models.PositiveIntegerField(verbose_name='Количество')),
                ('billet_price', models.PositiveIntegerField(verbose_name='Цена за заготовку')),
                ('costs_transporting_single', models.PositiveIntegerField(default=10)),
                ('approved_by_broker', models.BooleanField(default=False)),
                ('broker', models.ForeignKey(limit_choices_to={'role': 'broker'}, on_delete=django.db.models.deletion.CASCADE, related_name='transaction_b', to='core.player')),
                ('manufacturer', models.ForeignKey(limit_choices_to={'role': 'manufacturer'}, on_delete=django.db.models.deletion.CASCADE, related_name='transaction_m', to='core.player')),
                ('turn', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, related_name='transaction', to='core.turn')),
            ],
            options={
                'verbose_name': 'Сделка',
                'verbose_name_plural': 'Сделки',
            },
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('turn', models.PositiveIntegerField()),
                ('game_state', models.TextField()),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='state', to='core.session')),
            ],
        ),
        migrations.CreateModel(
            name='Production',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('billets_produced', models.PositiveIntegerField()),
                ('manufacturer', models.ForeignKey(limit_choices_to={'role': 'manufacturer'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='production', to='core.player')),
            ],
            options={
                'verbose_name': 'Запрос на производство',
                'verbose_name_plural': 'Запросы на производство',
            },
        ),
        migrations.AddField(
            model_name='player',
            name='session',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='player', to='core.session'),
        ),
        migrations.AddField(
            model_name='player',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='player', to=settings.AUTH_USER_MODEL),
        ),
    ]
